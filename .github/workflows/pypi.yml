name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      package-name:
        description: "Package to publish"
        required: true
        type: choice
        options:
          - inspect_ai
          - inspect_tool_support
        default: "inspect_ai"
      publish-release:
        description: "Production Release"
        required: false
        type: boolean
        default: false
      dry-run:
        description: "Dry run (no actual publishing)"
        required: false
        type: boolean
        default: false

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    environment: ${{ inputs.dry-run == false && 'pypi' || '' }}
    strategy:
      fail-fast: false
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Set working directory
        id: set-dir
        run: |
          if [ "${{ inputs.package-name }}" == "inspect_tool_support" ]; then
            echo "PACKAGE_DIR=src/inspect_tool_support" >> $GITHUB_ENV
            echo "DIST_DIR=src/inspect_tool_support/dist" >> $GITHUB_ENV
          else
            echo "PACKAGE_DIR=." >> $GITHUB_ENV
            echo "DIST_DIR=dist" >> $GITHUB_ENV
          fi
      - name: Build
        run: |
          cd ${{ env.PACKAGE_DIR }}
          python -m build
      - name: List package contents (dry run)
        if: ${{ inputs.dry-run }}
        run: |
          echo "ðŸ§ª DRY RUN MODE - No packages will be published ðŸ§ª"
          echo "Package that would be published:"
          ls -la ${{ env.DIST_DIR }}
      - name: Verify package metadata (dry run)
        if: ${{ inputs.dry-run }}
        run: |
          pip install twine
          twine check ${{ env.DIST_DIR }}/*
      - name: Simulate publishing (dry run)
        if: ${{ inputs.dry-run }}
        run: |
          echo "âœ… Validation complete. Package is ready for publishing."
          echo "Would publish to: ${{ inputs.publish-release && 'PyPI' || 'TestPyPI' }}"
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ !inputs.publish-release && !inputs.dry-run }}
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: ${{ env.DIST_DIR }}
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ inputs.publish-release && !inputs.dry-run }}
        with:
          packages-dir: ${{ env.DIST_DIR }}
